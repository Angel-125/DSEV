PART
{
	// --- general parameters ---
	name = wbiTankCluster
	module = Part
	author = Angel-125

	// --- asset parameters ---

	rescaleFactor = 1
	
	MODEL
	{
		model = WildBlueIndustries/DSEV/Parts/Nautilus/TankCluster
	}

	// --- node definitions ---
	node_stack_top = 0.0, 3.84884, 0.0, 0.0, 1.0, 0.0, 4
	node_stack_top2 = 0.0, 4.51973, 0.0, 0.0, 1.0, 0.0, 3
	node_stack_top3 = 0.0, 5.17597, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -3.8, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 3.75, 0.0, 0.0, 1.0, 0.0, 0.0, 1

	NODE
	{
		name = nodeOne
		transform = Node1
		size = 2
	}
	NODE
	{
		name = nodeTwo
		transform = Node2
		size = 2
	}
	NODE
	{
		name = nodeThree
		transform = Node3
		size = 2
	}
	NODE
	{
		name = nodeFour
		transform = Node4
		size = 2
	}
	NODE
	{
		name = nodeFive
		transform = Node5
		size = 2
	}
	NODE
	{
		name = nodeSix
		transform = Node6
		size = 2
	}

	// --- editor parameters ---
	TechRequired = highPerformanceFuelSystems
	entryCost = 24200
	cost = 42000
	category = FuelTank
	subcategory = 0
	title = Nautilus Tank Cluster
	manufacturer = Wild Blue Industries
	description = The only thing better than a cluster of Delta-64 tanks is a cluster of Delta-64 tanks with integrated radiators. The Nautilus Tank Cluster delivers.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 30
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 50
	breakingTorque = 50
	maxTemp = 2000
	fuelCrossFeed = True
	stackSymmetry = 5
	emissiveConstant = 0.90
	heatConductivity = 0.001 //They have built in insulators
	thermalMassModifier = 5
	radiatorHeadroom = 0.75
	skinInternalConductionMult = 2000

	MODULE
	{
	    name = WBIConvertibleStorage
	    enableLogging = True
	    showGUI = True

	    //Require a confirmation click before changing resources
	    confirmResourceSwitch = True
	
	    //Short name of the default module template.
	    //This is used when selecting the part in the editor.
	    //User will then right-click on the module to change its type.
	    defaultTemplate = LFO

	    //name of the template nodes to use
	    templateNodes = STORAGE_TEMPLATE
	    templateTypes = Storage

	    //Determines if the module allows in-field reconfiguring
	    fieldReconfigurable = True

	    //List of all the resources that may be replaced during a template switch. Any resource NOT
	    //on the list will be preserved.
	    //If empty, then all of the part's resources will be cleared during a template switch.
	    //Set to ALL if you want all of the part's resources to be cleared during a template switch.
	    //This exists because mods like TAC-LS like to add resources to parts and we won't know about them at runtime.
	    resourcesToReplace = ALL

	    //Some containers don't hold as much resources as the template specifies, while others hold more.
	    //Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
	    //factor into the resource amounts.
	    capacityFactor = 24.888864

	    //Name of the logo panel transforms
	    decalsVisible = false
	}

	MODULE
	{
		name = ModuleActiveRadiator
		maxEnergyTransfer = 12000
		overcoolFactor = 0.25
		isCoreRadiator = true
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.25
		}		
	}

	MODULE
	{
		name = WBIFixedHeatRadiator

		//INPUT_RESOURCE specifies the coolant needed for heat transfer. It is required for active cooling.
		//Active cooling circulates coolant to other parts in the vessel to cool them down.
		//Without active cooling, parts must rely on the parts they're attached to,
		//their own mass, and the environment to cool down.
		//You can use whatever resource you want for coolant. Some resources are better than others.
		INPUT_RESOURCE
		{
			name = Coolant

			flowMode = NO_FLOW

			ratio = 1.0

		}



	
	//Radiators support two types of cooling: closed-cycle, and open-cycle.

		//Closed-cycle keeps circulating coolant within the vessel, and it may take awhile

		//for the vessel to cool down. Open-cycle cooling sheds heat more quickly,

		//but at the expense of coolant (the resources specified by INPUT_RESOURCE).
		//This value specifies the number of units per second to dump overboard.
		//Each INPUT_RESOURCE above will be dumped according to their ratio.

		//If you don't want open-cycle cooling, then don't include this field or set it to 0.
		coolantDumpRate = 66.67

		//Specifies the coolant loss rate.
		//The first number represents the number of units per second that is lost
		//in general. The second number is the number of units lost per g of acceleration.
		//That second number is particularly useful for liquid droplet radiators.
		//Uncomment this line if you want coolant loss.
		//coolantLossRate = 0,1.0

		//Name of the particle effects to enable during open-cycle cooling
		coolantDumpEffect = CoolantDump
		soundFilePath = Squad/Sounds/sound_rocket_mini
	}			

	MODULE:NEEDS[Pathfinder]
	{
		name = WBIResourceDistributor
	}

	MODULE
	{
		name = ModuleStructuralNode
		rootObject = Size3Adapter
		attachNodeNames = top2
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = Size2Adapter
		attachNodeNames = top3
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount001
		attachNodeNames = bottom
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount002
		attachNodeNames = nodeOne
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount003
		attachNodeNames = nodeTwo
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount004
		attachNodeNames = nodeThree
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount005
		attachNodeNames = nodeFour
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount006
		attachNodeNames = nodeFive
	}	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = EngineMount007
		attachNodeNames = nodeSix
	}	

	MODULE
	{
		name = ModuleAnimateHeat
		ThermalAnim = ClusterHeat
	}

	RESOURCE
	{
		name = LiquidFuel
		amount = 20160
		maxAmount = 20160
	}
	RESOURCE
	{
		name = Oxidizer
		amount = 24640
		maxAmount = 24640
	}

	RESOURCE
	{
		name = Coolant
		amount = 1000
		maxAmount = 1000
	}
}
