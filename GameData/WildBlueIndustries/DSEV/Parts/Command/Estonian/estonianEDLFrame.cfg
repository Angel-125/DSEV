PART
{
	// --- general parameters ---
	name = estonianEDLFrame
	module = Part
	author = Angel-125

	// --- asset parameters ---
	rescaleFactor = 1

	MODEL
	{
	    model = WildBlueIndustries/DSEV/Parts/Command/Estonian/estonianEDLFrame
	}

	// --- node definitions ---
	node_stack_top = 0.0, 0.51, 0.0, 0.0, 1.0, 0.0, 3
	node_stack_bottom = 0.0, -0.51, 0.0, 0.0, -1.0, 0.0, 3

	// --- editor parameters ---
	TechRequired = composites
	entryCost = 18800
	cost = 1700
	category = FuelTank
	subcategory = 0
	title = Estonian EDL Frame
	manufacturer = Wild Blue Industries
	description = Specially designed for the Estonian command pod, this Entry Descent Landing (EDL) frame is built to handle the rigors of atmospheric entry.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 1.25
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 50
	breakingTorque = 50
	maxTemp = 2000
	fuelCrossFeed = True

	MODULE:NEEDS[KIS]
	{
	    name = ModuleKISInventory
	    maxVolume = 1400
	    externalAccess = true
	    internalAccess = true
	    slotsX = 6
	    slotsY = 4
	    slotSize = 50
	    itemIconResolution = 128
	    selfIconResolution = 128
	    openSndPath = KIS/Sounds/containerOpen
	    closeSndPath = KIS/Sounds/containerClose
	    defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = WBIConvertibleStorage
		enableLogging = True

		showGUI = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = LFO

		//name of the template nodes to use
		templateNodes = STORAGE_TEMPLATE

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//List of all the resources that may be replaced during a template switch. Any resource NOT
		//on the list will be preserved.
		//If empty, then all of the part's resources will be cleared during a template switch.
		//Set to ALL if you want all of the part's resources to be cleared during a template switch.
		//This exists because mods like TAC-LS like to add resources to parts and we won't know about them at runtime.
		resourcesToReplace = ALL
		resourcesToKeep = Ablator

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 0.5

		decalsVisible = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = .001
		maxStorage = 1400
	}

	MODULE:NEEDS[Pathfinder]
	{
		name = WBIResourceDistributor
	}

	MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -7500
		lossConst = 0.1
		pyrolysisLossFactor = 6000
		reentryConductivity = 0.01
		ablationTempThresh = 500
		
		useChar = True
		charModuleName = shieldChar
	}
	MODULE
	{
		name = ModuleColorChanger
		moduleID = shieldChar
		shaderProperty = _BurnColor
		useRate = False
		toggleInEditor = False
		toggleInFlight = False
		
		redCurve
		{
			key = 0 0
			key = 1 1
		}
		greenCurve
		{
			key = 0 0
			key = 1 1
		}
		blueCurve
		{
			key = 0 0
			key = 1 1
		}
		alphaCurve
		{
			key = 0 0.8
		}
	}
	
	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			// prelaunch only at home
			// our main situationMask above includes prelaunch
			// but if nothome, here, and that mask with this value (11)
			// which excludes prelaunch
			type = SITUATION
			value = 11
			body = _NotHome
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 350
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 250
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 300
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 600
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 400
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1500
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1000
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 6000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 2000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = LT
			value = 0.1
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 6000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 8000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 12000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 12000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 16000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
	
	MODULE
	{
		name = ModuleLiftingSurface
		useInternalDragModel = False
		deflectionLiftCoeff = 3.375
		liftingSurfaceCurve = CapsuleBottom
		disableBodyLift = False
		omnidirectional = False
		perpendicularOnly = True
		transformDir = Y
		transformSign = -1
		nodeEnabled = True
		attachNodeName = bottom
	}

	RESOURCE
	{
		name = Ablator
		amount = 100
		maxAmount = 1800
	}	

	RESOURCE
	{
		 name = LiquidFuel
		 amount = 405
		 maxAmount = 405
	}

	RESOURCE
	{
		name = Oxidizer
		amount = 495
		maxAmount = 495
	}
}
