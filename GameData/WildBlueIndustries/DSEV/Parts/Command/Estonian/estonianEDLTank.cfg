PART
{
	// --- general parameters ---
	name = estonianEDLTank
	module = Part
	author = Angel-125

	// --- asset parameters ---
	rescaleFactor = 1

	MODEL
	{
	    model = WildBlueIndustries/DSEV/Parts/Command/Estonian/estonianEDLTank
	}

	// --- node definitions ---
	node_stack_top = 0.0, 0.482, 0.0, 0.0, 1.0, 0.0, 3
	node_stack_bottom = 0.0, -0.482, 0.0, 0.0, -1.0, 0.0, 3
	node_stack_EDLFrame = 0.0, -0.482, 0.0, 0.0, 1.0, 0.0, 3

	// --- editor parameters ---
	TechRequired = composites
	entryCost = 18800
	cost = 1700
	category = FuelTank
	subcategory = 0
	title = Mk3-1 EDL Tank
	manufacturer = Wild Blue Industries
	description = Specially designed for the Estonian command pod, this Entry Descent Landing (EDL) tank stores resources. It also serves an adapter from the Estonian command pod to the Mk3-1 EDL Frame. NOTE: There are TWO attachment points on the bottom; one for an engine (the T-1 "Dart" works well, as do others), and one for the EDL Frame.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 1.225
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	breakingForce = 200
	breakingTorque = 200
	crashTolerance = 9
	maxTemp = 1400
	skinMaxTemp = 2400
	fuelCrossFeed = True
	tags = cck-DSEV

	MODULE:NEEDS[KIS]
	{
	    name = ModuleKISInventory
	    maxVolume = 9800
	    externalAccess = true
	    internalAccess = true
	    slotsX = 6
	    slotsY = 4
	    slotSize = 50
	    itemIconResolution = 128
	    selfIconResolution = 128
	    openSndPath = KIS/Sounds/containerOpen
	    closeSndPath = KIS/Sounds/containerClose
	    defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = WBIOmniStorage

		//In liters, how much can the part store.
		storageVolume = 9800

		//Skill required to reconfigure the container.
		reconfigureSkill = ConverterSkill

		//Minimum rank to reconfigure the container.
		reconfigureRank = 1

		//Resource required to reconfigure the container.
		requiredResource = Equipment

		//Amount of the required resource to reconfigure the container.
		requiredAmount = 0
	}

	MODULE:NEEDS[WildBlueCore]
	{
		name = WBIModuleFuelPump
	}

	RESOURCE
	{
		 name = LiquidFuel
		 amount = 882
		 maxAmount = 882
	}

	RESOURCE
	{
		name = Oxidizer
		amount = 1078
		maxAmount = 1078
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			// prelaunch only at home
			// our main situationMask above includes prelaunch
			// but if nothome, here, and that mask with this value (11)
			// which excludes prelaunch
			type = SITUATION
			value = 11
			body = _NotHome
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 350
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 250
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 300
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 600
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 400
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1500
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1000
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 6000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 2000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = LT
			value = 0.1
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 6000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 8000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 12000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 12000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 16000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
