PART:NEEDS[WildBlueIndustries/Buffalo2]
{
	name = wbiD2Sickbay
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/DSEV/Assets/d2Sickbay
	}
	MODEL
	{
		model = WildBlueIndustries/DSEV/Parts/Nautilus/D2HexMMODHalf
	}
	rescaleFactor = 1
	node_stack_top = 0, 0.625, 0, 0, 1, 0, 3
	node_stack_bottom = 0, -0.625, 0, 0, -1, 0, 3
	node_attach = 0.0, 0.0, -1.875, 0.0, 0.0, 1.0

	TechRequired = advMetalworks
	entryCost = 8000
	cost = 3000
	category = Utility
	subcategory = 0
	title = D2 Sickbay
	manufacturer = Wild Blue Industries
	description = Deep Space Exploration Vessels typically provide ample facilities for the crew to live and work, but there are times when crewmembers get Stressed Out. The D2 Sickbay offers a place to rest and recuperate at a higher rate than other activities like Exercising, Relaxing, or Gardening.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 1.75
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 20
	breakingForce = 50
	breakingTorque = 50
	bulkheadProfiles = size3, srf
	vesselType = Ship
	maxTemp = 1400
	skinMaxTemp = 2400
	CrewCapacity = 10
	tags = cck-DSEV

	INTERNAL
	{
		name = wbiD2SickbayIVA
	}

	MODULE
	{
		name = ModuleInventoryPart		
		InventorySlots = 6
		packedVolumeLimit = 500
	}

	MODULE
	{
		name = ModuleConductionMultiplier
		modifiedConductionFactor = 0.003
		convectionFluxThreshold = 3000
	}

	MODULE
	{
		name = ModuleColorChanger
		shaderProperty = _EmissiveColor
		animRate = 0.8
		animState = false
		useRate = true
		toggleInEditor = true
		toggleInFlight = true
		toggleInFlight = true
		unfocusedRange = 5
		toggleName = #autoLOC_502011 //#autoLOC_502011 = Toggle Lights
		eventOnName = #autoLOC_502012 //#autoLOC_502012 = Lights On
		eventOffName = #autoLOC_502013 //#autoLOC_502013 = Lights Off
		toggleAction = True
		defaultActionGroup = Light
		redCurve
		{
			key = 0 0 0 3
			key = 1 1 0 0
		}
		greenCurve
		{
			key = 0 0 0 1
			key = 1 1 1 0
		}
		blueCurve
		{
			key = 0 0 0 0
			key = 1 0.7 1.5 0
		}
		alphaCurve
		{
			key = 0 1
		}
	}

	MODULE
	{
		name = WBIModulePropStates
	}

	MODULE
	{
		name = WBIMeshToggle
		objects = D2HexMMODHalf
		showMeshesName = Add MMMOD
		hideMeshesName = Remove MMOD
		guiVisible = true
		meshesVisible = false
	}

	MODULE
	{
		name = WBIModuleSeatChanger
	}

	MODULE
	{
		name = WBIModuleSeatRotator
		seatName = caregiverSeat001
		propRotationAxis = 1,0,0
		rotationAmount = 45
	}
	MODULE
	{
		name = WBIModuleSeatRotator
		seatName = caregiverSeat002
		propRotationAxis = 1,0,0
		rotationAmount = 45
	}
	MODULE
	{
		name = WBIModuleSeatRotator
		seatName = caregiverSeat003
		propRotationAxis = 1,0,0
		rotationAmount = 45
	}
	MODULE
	{
		name = WBIModuleSeatRotator
		seatName = caregiverSeat004
		propRotationAxis = 1,0,0
		rotationAmount = 45
	}
	MODULE
	{
		name = WBIModuleSeatRotator
		seatName = caregiverSeat005
		propRotationAxis = 1,0,0
		rotationAmount = 45
	}

	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Recuperating
		StartActionName = Start Recuperating
		StopActionName = Stop Recuperating
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Recuperating

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 2
			FlowMode = ALL_VESSEL
		}

		//Works like an INTPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INTPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 6
		}
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 1000
		maxAmount = 1000
		isTweakable = true
	}
}