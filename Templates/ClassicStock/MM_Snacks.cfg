//This MM patch configures DSEV's life support systems to use Snacks.
@PART[wbiZenGreenhouse,wbiNautilusBridge]:NEEDS[SnacksUtils]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Greenhouse
		StartActionName = Start Grenhouse
		StopActionName = Stop Greenhouse
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		hoursPerCycle = 168 //Number of hours to grow crops
		minimumSuccess = 1
		criticalSuccess = 90
		criticalFail = 5

		criticalSuccessBonus = 0.25
		failureLoss = 0.25

		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.000218750
		}

		INPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = 0.000072917
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE:NEEDS[SnacksFreshAir]
		{
			ResourceName = FreshAir
			Ratio = 0.00045
		}

		//Calibrated for 1 snack per meal, 3 meals per day
		//Supports 2 kerbals
		YIELD_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 168
		}
	}

	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Gardening
		StartActionName = Start Gardening
		StopActionName = Stop Gardening
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Gardening

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}

	RESOURCE
	{
		name = Compost
		amount = 50
		maxAmount = 50
		isTweakable = true
	}

	RESOURCE
	{
		name = Water
		amount = 50
		maxAmount = 50
		isTweakable = true
	}
}

@PART[wbiMiniCupola]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Stargazing
		StartActionName = Start Stargazing
		StopActionName = Stop Stargazing
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Stargazing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}
}

@PART[TranquilityHab]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 3
		}
	}
}

@PART[WBI_D2Hab,WBI_HomesteadMk3]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 3.5
		}
	}
}

@PART[WBI_D2Centrifuge,wbiNautilusCentrifuge,wbiS3HabRing]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 4.25
		}
	}

	MODULE
	{
        	// This part module is designed to negate one or more preconditions so long as the kerbal resides in the part.
	        // An example would be a centrifuge.
	        name = SnacksDisqualifier

	        // Contains the disqualified preconditions such as CheckGravityLevel.checkLesserOrEqual for low gravity checks. 
        	// Separate disqualified preconditions by semicolon.
	        // Most of the preconditions can be disqualified simply by stating their name. 
	        // If a precondition requires something different, be sure to check its documentation.
	        disqualifiedPreconditions = CheckGravityLevel
	}
}

@TRANQ[Tranquility]:NEEDS[SnacksUtils]
{
	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.000034723.
	//The input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 4
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 36
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 50
	}

	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00074
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000296
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 64
	}
}

@CENTRIFUGE[Centrifuge]:NEEDS[SnacksUtils]
{
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Haber Process
		StartActionName = Start Haber Process
		StopActionName = Stop Haber Process
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		 
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = Minerite
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3.5
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = .002
			DumpExcess = false
		}
	}

	MODULE
	{
		name = SnacksConverter
		ConverterName = Greenhouse
		StartActionName = Start Grenhouse
		StopActionName = Stop Greenhouse
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		hoursPerCycle = 540 //Number of hours to grow crops
		minimumSuccess = 1
		criticalSuccess = 90
		criticalFail = 5

		criticalSuccessBonus = 0.25
		failureLoss = 0.25

		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0013125
		}

		INPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = 0.0004375
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE:NEEDS[SnacksFreshAir]
		{
			ResourceName = FreshAir
			Ratio = 0.0018
		}

		//Calibrated for 1 snack per meal, 3 meals per day
		//Supports 12 kerbals
		YIELD_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 3240
		}
	}

	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.00004630,
	//which gives a daily input/output of 1.00008 per day. The recycler will then adjust
	//the input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 12
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 36
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00222
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1.2
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000888
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 192
	}

	RESOURCE
	{
		name = Compost
		amount = 50
		maxAmount = 50
		isTweakable = true
	}

	RESOURCE
	{
		name = Water
		amount = 50
		maxAmount = 50
		isTweakable = true
	}

	RESOURCE
	{
		name = Soil
		amount = 500
		maxAmount = 500
		isTweakable = false
	}

	RESOURCE
	{
		name = Ore
		amount = 50
		maxAmount = 50
		isTweakable = false
	}

	RESOURCE
	{
		name = Minerite
		amount = 50
		maxAmount = 50
		isTweakable = false
	}
}

D2HAB:NEEDS[SnacksUtils]
{
	author = Angel-125
	name = Habitat
	title = D2 Habitat
	mass = 3.5
	requiredResource = Equipment
	requiredAmount = 1400
	reconfigureSkill = ConverterSkill
	logoPanel = WildBlueIndustries/000WildBlueTools/Decals/Ponderosa
	glowPanel = WildBlueIndustries/000WildBlueTools/Decals/Ponderosa
	description = The D2 Habitat contains advanced equipment to supply kerbals with snacks, recycle their waste products, and create fertilizer needed for the greenhouse.
	toolTip = You can recycle soil into snacks and create fertilizer
	toolTipTitle = Your First D2 Habitat

	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.00004630,
	//which gives a daily input/output of 1.00008 per day. The recycler will then adjust
	//the input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 12
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 36
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Haber Process
		StartActionName = Start Haber Process
		StopActionName = Stop Haber Process
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		 
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = Minerite
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3.5
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = .001
			DumpExcess = false
		}
	}

	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00074
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000296
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 64
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 1000
		isTweakable = false
	}

	RESOURCE
	{
		name = Ore
		amount = 100
		maxAmount = 100
		isTweakable = false
	}

	RESOURCE
	{
		name = Minerite
		amount = 100
		maxAmount = 100
		isTweakable = false
	}

	RESOURCE
	{
		name = Compost
		amount = 100
		maxAmount = 100
		isTweakable = true
	}
}

@PART[WBI_D2Greenhouse]:FOR[DSEV]:NEEDS[SnacksUtils]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Greenhouse
		StartActionName = Start Grenhouse
		StopActionName = Stop Greenhouse
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		hoursPerCycle = 540 //Number of hours to grow crops
		minimumSuccess = 1
		criticalSuccess = 90
		criticalFail = 5

		criticalSuccessBonus = 0.25
		failureLoss = 0.25

		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0013125
		}

		INPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = 0.0004375
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE:NEEDS[SnacksFreshAir]
		{
			ResourceName = FreshAir
			Ratio = 0.0018
		}

		//Calibrated for 1 snack per meal, 3 meals per day
		//Supports 12 kerbals
		YIELD_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 3240
		}

	}

	RESOURCE
	{
		name = Compost
		amount = 100
		maxAmount = 100
		isTweakable = true
	}

	RESOURCE
	{
		name = Water
		amount = 100
		maxAmount = 100
		isTweakable = true
	}

	RESOURCE
	{
		name = Snacks
		amount = 0
		maxAmount = 3240
	}
}

@Homestead[Homestead]:NEEDS[SnacksUtils]
{
	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.00004630,
	//which gives a daily input/output of 1.00008 per day. The recycler will then adjust
	//the input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 12
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 36
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Haber Process
		StartActionName = Start Haber Process
		StopActionName = Stop Haber Process
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		 
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = Minerite
			Ratio = .002
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 3.5
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = .001
			DumpExcess = false
		}
	}

	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scribber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00074
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.4
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000296
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 64
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 1000
		isTweakable = false
	}

	RESOURCE
	{
		name = Ore
		amount = 50
		maxAmount = 50
		isTweakable = false
	}

	RESOURCE
	{
		name = Minerite
		amount = 100
		maxAmount = 100
		isTweakable = false
	}

	RESOURCE
	{
		name = Compost
		amount = 100
		maxAmount = 100
		isTweakable = true
	}
}